{"version":3,"sources":["images/undraw_To_do_re_jaef.svg","components/TodoItem.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Card","styled","div","props","theme","colors","lightPink","CardText","fonts","MD","isDone","Status","Delete","TodoItem","todo","handleDeleteTodo","handleToggleIsDone","handleStatusClick","id","onClick","icon","faSquare","style","color","cursor","fontSize","faCheckSquare","content","faTrashAlt","GlobalStyle","createGlobalStyle","pink","Title","h1","Container","purple","CoverImage","coverImage","Todos","TodoInput","Input","input","Todo","ButtonContainer","Button","button","SM","peachPink","lightGray","active","TodoList","useRef","useState","value","setValue","todos","setTodo","filter","setFilter","handleAddTodo","current","map","Fragment","placeholder","onChange","e","target","onKeyPress","key","faPlus","position","right","top","LG","App","StrictMode","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"+PAAe,MAA0B,iD,eCOnCA,EAAOC,IAAOC,IAAV,gMAOc,SAACC,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,aAGhDC,EAAWN,IAAOC,IAAV,mGAEC,SAACC,GAAD,OAAWA,EAAMC,MAAMI,MAAMC,MAGxC,SAACN,GAAD,OACAA,EAAMO,QAAN,+DAKEC,EAASV,IAAOC,IAAV,4FAMNU,EAASX,IAAOC,IAAV,sEAyDGW,I,oBAAAA,EAlDf,YAAoE,IAA/CC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,iBAAkBC,EAAsB,EAAtBA,mBACrCC,EAAoB,WACxBD,EAAmBF,EAAKI,KAO1B,OACE,eAAClB,EAAD,YACGc,EAAKJ,QAAU,cAACC,EAAD,UAChB,cAAC,IAAD,CACEQ,QAASF,EACTG,KAAMC,IACNC,MAAO,CACLC,MAAO,UACPC,OAAQ,UACRC,SAAU,YAIbX,EAAKJ,QAAU,cAACC,EAAD,UACf,cAAC,IAAD,CACEQ,QAASF,EACTG,KAAMM,IACNJ,MAAO,CACLC,MAAO,UACPC,OAAQ,UACRC,SAAU,YAIf,cAAClB,EAAD,CAAUG,OAAQI,EAAKJ,OAAvB,SAAgCI,EAAKa,UACrC,cAACf,EAAD,UACE,cAAC,IAAD,CACEO,QA/BkB,WACxBJ,EAAiBD,EAAKI,KA+BhBE,KAAMQ,IACNN,MAAO,CACLC,MAAO,UACPC,OAAQ,UACRC,SAAU,gBCzEhBI,EAAcC,YAAH,8JAMO,SAAC3B,GAAD,OAAWA,EAAMC,MAAMC,OAAO0B,QAGhDC,EAAQ/B,IAAOgC,GAAV,iFAMLC,EAAYjC,IAAOC,IAAV,4PAUa,SAACC,GAAD,OAAWA,EAAMC,MAAMC,OAAO8B,UAEpDC,EAAanC,IAAOC,IAAV,wIACUmC,GAKpBC,EAAQrC,IAAOC,IAAV,4IAOLqC,EAAYtC,IAAOC,IAAV,mDAGTsC,EAAQvC,IAAOwC,MAAV,yOAMI,SAACtC,GAAD,OAAWA,EAAMC,MAAMI,MAAMC,MAOtCiC,EAAOzC,IAAOC,IAAV,iEAIJyC,EAAkB1C,IAAOC,IAAV,mDAGf0C,EAAS3C,IAAO4C,OAAV,sRAGG,SAAC1C,GAAD,OAAWA,EAAMC,MAAMI,MAAMsC,MAQpB,SAAC3C,GAAD,OAAWA,EAAMC,MAAMC,OAAO0C,aACzC,SAAC5C,GAAD,OAAWA,EAAMC,MAAMC,OAAO2C,aAErB,SAAC7C,GAAD,OAAWA,EAAM8C,OAAS9C,EAAMC,MAAMC,OAAO8B,OAAS,UACjE,SAAChC,GAAD,OAAWA,EAAM8C,OAAS9C,EAAMC,MAAMC,OAAO2C,UAAY,UAgGrDE,MA7Ff,WACE,IAAMhC,EAAKiC,iBAAO,GADA,EAESC,mBAAS,IAFlB,mBAEVC,EAFU,KAEHC,EAFG,OAGSF,mBAAS,IAHlB,mBAGVG,EAHU,KAGHC,EAHG,OAIYJ,mBAAS,OAJrB,mBAIVK,EAJU,KAIFC,EAJE,KAMZC,EAAgB,WACfN,IACLG,EAAQ,CACN,CAACtC,GAAIA,EAAG0C,QAASjC,QAAS0B,EAAO3C,QAAQ,IADpC,mBAEF6C,KAELD,EAAS,IACTpC,EAAG0C,YAGC5C,EAAqB,SAACE,GAC1BsC,EAAQD,EAAMM,KAAI,SAAC/C,GACjB,OAAII,IAAOJ,EAAKI,GAAWJ,EACpB,2BACFA,GADL,IAEEJ,QAASI,EAAKJ,cAKdK,EAAmB,SAACG,GACxBsC,EAAQD,EAAME,QAAO,SAAA3C,GAAI,OAAIA,EAAKI,KAAOA,OAO3C,OACE,eAAC,IAAM4C,SAAP,WACA,cAACjC,EAAD,IACE,eAACK,EAAD,WACE,cAACF,EAAD,wBACA,cAACI,EAAD,IACA,eAACE,EAAD,WACE,eAACC,EAAD,WACE,cAACC,EAAD,CACEa,MAAOA,EACPU,YAAa,uCACbC,SAAW,SAACC,GAAKX,EAASW,EAAEC,OAAOb,QACnCc,WAAa,SAACF,GACE,UAAVA,EAAEG,KACJT,OAIN,cAAC,IAAD,CACExC,QAASwC,EACTvC,KAAMiD,IACN/C,MAAO,CACLE,OAAQ,UACR8C,SAAU,WACVC,MAAO,MACPC,IAAK,aAIX,cAAC9B,EAAD,UACGa,EACEE,QAAO,SAAC3C,GACP,MAAe,QAAX2C,EAAyB3C,EACd,WAAX2C,GAA6B3C,EAAKJ,OACvB,cAAX+C,EAA+B3C,EAAKJ,YAAxC,KAEDmD,KAAI,SAAC/C,GACN,OACE,cAAC,EAAD,CAEEA,KAAMA,EACNE,mBAAoBA,EACpBD,iBAAkBA,GAHbD,EAAKI,YASpB,eAACyB,EAAD,WACE,cAACC,EAAD,CAAQzB,QAAU,kBAAIuC,EAAU,QAAST,OAAmB,QAAXQ,EAAjD,0BACA,cAACb,EAAD,CAAQzB,QAAU,kBAAIuC,EAAU,WAAYT,OAAmB,WAAXQ,EAApD,gCACA,cAACb,EAAD,CAAQzB,QAAU,kBAAIuC,EAAU,cAAeT,OAAmB,cAAXQ,EAAvD,gCACA,cAACb,EAAD,CAAQzB,QAxDY,WAC1BqC,EAAQD,EAAME,QAAO,SAAA3C,GAAI,OAAIA,EAAKI,KAAOJ,EAAKI,QAuDxC,gDC5KJd,EAAQ,CACZC,OAAQ,CACN0B,KAAM,UACNzB,UAAW,UACX0C,UAAW,UACXb,OAAQ,UACRY,UAAW,WAEbvC,MAAO,CACLiE,GAAI,OACJhE,GAAI,OACJqC,GAAI,SAcO4B,MAVf,WACE,OACE,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAevE,MAAOA,EAAtB,SACE,cAAC,EAAD,SCXOwE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8e12ee3e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/undraw_To_do_re_jaef.757033f4.svg\";","import React from 'react';\r\nimport '../App.css'\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCheckSquare, faSquare  } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nconst Card = styled.div`\r\n  padding: 10px;\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  &:hover {\r\n    background-color: ${(props) => props.theme.colors.lightPink};\r\n  }\r\n`;\r\nconst CardText = styled.div`\r\n  width: 215px;\r\n  font-size: ${(props) => props.theme.fonts.MD};\r\n  word-break: break-all;\r\n\r\n  ${(props) =>\r\n    props.isDone &&\r\n    `text-decoration: line-through;\r\n      opacity: 0.6;\r\n    `}\r\n`\r\nconst Status = styled.div`\r\n  margin-right: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Delete = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\n\r\n\r\nfunction TodoItem( { todo, handleDeleteTodo, handleToggleIsDone }) {\r\n  const handleStatusClick = () => {\r\n    handleToggleIsDone(todo.id)\r\n  }\r\n\r\n  const handleDeleteClick = () => {\r\n    handleDeleteTodo(todo.id)\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n     {!todo.isDone && <Status>\r\n      <FontAwesomeIcon\r\n        onClick={handleStatusClick}\r\n        icon={faSquare}\r\n        style={{\r\n          color: \"#cdc9c3\",\r\n          cursor: \"pointer\",\r\n          fontSize: \"21px\",\r\n        }}\r\n        />\r\n      </Status>}\r\n      {todo.isDone && <Status>\r\n       <FontAwesomeIcon\r\n         onClick={handleStatusClick}\r\n         icon={faCheckSquare}\r\n         style={{\r\n           color: \"#cdc9c3\",\r\n           cursor: \"pointer\",\r\n           fontSize: \"21px\",\r\n         }}\r\n         />\r\n       </Status>}\r\n      <CardText isDone={todo.isDone}>{todo.content}</CardText>\r\n      <Delete>\r\n        <FontAwesomeIcon\r\n          onClick={handleDeleteClick}\r\n          icon={faTrashAlt}\r\n          style={{\r\n            color: \"#cdc9c3\",\r\n            cursor: \"pointer\",\r\n            fontSize: \"21px\",\r\n          }}\r\n        />\r\n      </Delete>\r\n    </Card>\r\n\r\n  );\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { useState, useRef } from 'react';\r\nimport '../App.css'\r\nimport styled, {createGlobalStyle} from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport coverImage from '../images/undraw_To_do_re_jaef.svg';\r\nimport TodoItem from './TodoItem'\r\n\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n    font-family: 'Noto Sans TC', sans-serif;\r\n  }\r\n  body {\r\n    background-color: ${(props) => props.theme.colors.pink};\r\n  }\r\n`\r\nconst Title = styled.h1`\r\n  position: absolute;\r\n  top: -48px;\r\n  left: 15px;\r\n`\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-color: white;\r\n  width: 360px;\r\n  height: 550px;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 3px 3px 5px ${(props) => props.theme.colors.purple};\r\n`;\r\nconst CoverImage = styled.div`\r\n  background-image: url(${coverImage});\r\n  background-repeat: no-repeat;\r\n  background-size: 320px;\r\n  height: 180px;\r\n`;\r\nconst Todos = styled.div`\r\n  background-color: white;\r\n  height: 290px;\r\n  border-raidus: 10px;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n`;\r\nconst TodoInput = styled.div`\r\n  position: relative;\r\n`;\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: 6px;\r\n  border-color: transparent;\r\n  border-bottom: 2px solid black;\r\n  letter-spacing: 1px;\r\n  font-size: ${(props) => props.theme.fonts.MD};\r\n  margin-bottom: 10px;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`\r\nconst Todo = styled.div`\r\n  height: 220px;\r\n  overflow: auto;\r\n`\r\nconst ButtonContainer = styled.div`\r\n  text-align: center;\r\n`\r\nconst Button = styled.button`\r\n  border-radius: 5px;\r\n  padding: 5px 8px;\r\n  font-size: ${(props) => props.theme.fonts.SM};\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  & + & {\r\n    margin-left: 10px;\r\n  }\r\n  &:last-child {\r\n    background-color: ${(props) => props.theme.colors.peachPink};\r\n    color: ${(props) => props.theme.colors.lightGray};\r\n  }\r\n  background-color: ${(props) => props.active ? props.theme.colors.purple : 'auto'};\r\n  color: ${(props) => props.active ? props.theme.colors.lightGray : 'auto'};\r\n`\r\n\r\nfunction TodoList() {\r\n  const id = useRef(1);\r\n  const [ value, setValue] = useState('')\r\n  const [ todos, setTodo ] = useState([])\r\n  const [ filter, setFilter ] = useState('all')\r\n\r\n  const handleAddTodo = () => {\r\n    if (!value) return\r\n    setTodo([\r\n      {id: id.current, content: value, isDone: false},\r\n      ...todos\r\n    ])\r\n    setValue('')\r\n    id.current++\r\n  }\r\n\r\n  const handleToggleIsDone = (id) => {\r\n    setTodo(todos.map((todo)=>{\r\n      if (id !== todo.id) return todo\r\n      return {\r\n        ...todo,\r\n        isDone: !todo.isDone\r\n      }\r\n    }))\r\n  }\r\n\r\n  const handleDeleteTodo = (id)=> {\r\n    setTodo(todos.filter(todo => todo.id !== id))\r\n  }\r\n\r\n  const handleDeleteTodoAll = () => {\r\n    setTodo(todos.filter(todo => todo.id !== todo.id))\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <GlobalStyle />\r\n      <Container>\r\n        <Title>Todo List</Title>\r\n        <CoverImage />\r\n        <Todos>\r\n          <TodoInput>\r\n            <Input\r\n              value={value}\r\n              placeholder={'輸入待辦事項'}\r\n              onChange={((e)=>{setValue(e.target.value)})}\r\n              onKeyPress={((e)=> {\r\n                if (e.key === 'Enter'){\r\n                  handleAddTodo()\r\n                }\r\n              })}\r\n            />\r\n            <FontAwesomeIcon\r\n              onClick={handleAddTodo}\r\n              icon={faPlus}\r\n              style={{\r\n                cursor: \"pointer\",\r\n                position: \"absolute\",\r\n                right: \"5px\",\r\n                top: \"10px\",\r\n              }}\r\n          />\r\n          </TodoInput>\r\n          <Todo>\r\n            {todos\r\n              .filter((todo) => {\r\n                if (filter === 'all') return todo\r\n                if (filter === 'active') return !todo.isDone\r\n                if (filter === 'completed') return todo.isDone\r\n              })\r\n              .map((todo) => {\r\n              return (\r\n                <TodoItem\r\n                  key={todo.id}\r\n                  todo={todo}\r\n                  handleToggleIsDone={handleToggleIsDone}\r\n                  handleDeleteTodo={handleDeleteTodo}\r\n                />\r\n              )\r\n            })}\r\n          </Todo>\r\n        </Todos>\r\n        <ButtonContainer>\r\n          <Button onClick={(()=>setFilter('all'))} active={filter === 'all'}>全選</Button>\r\n          <Button onClick={(()=>setFilter('active'))} active={filter === 'active'}>進行中</Button>\r\n          <Button onClick={(()=>setFilter('completed'))} active={filter === 'completed'}>已完成</Button>\r\n          <Button onClick={handleDeleteTodoAll}>刪除全部</Button>\r\n        </ButtonContainer>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport TodoList from './components/TodoList'\n\nconst theme = {\n  colors: {\n    pink: \"#ffc7c7\",\n    lightPink: \"#ffe2e2\",\n    lightGray: \"#f6f6f6\",\n    purple: \"#8785a2\",\n    peachPink: \"#fc5185\",\n  },\n  fonts: {\n    LG: \"24px\",\n    MD: \"18px\",\n    SM: \"14px\",\n  },\n};\n\nfunction App() {\n  return (\n    <React.StrictMode>\n      <ThemeProvider theme={theme}>\n        <TodoList />\n      </ThemeProvider>\n    </React.StrictMode>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}